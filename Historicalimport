<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Historical COC Import</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/css/select2.min.css" rel="stylesheet" />
  <script>
    window.CURRENT_PAGE = 'historical-import';
  </script>
  
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f7fafc;
      margin: 0;
      padding: 0;
    }

    .select2-container .select2-selection--single {
      height: 3rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      padding: 0.625rem 0.75rem;
      background-color: white;
      font-size: 15px;
    }

    .modal-backdrop {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(15, 23, 42, 0.55);
      z-index: 50;
      opacity: 0;
      transition: opacity 0.25s ease-in-out;
    }

    .modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0.96);
      z-index: 60;
      opacity: 0;
      transition: opacity 0.25s ease-in-out, transform 0.25s ease-in-out;
      width: 100%;
      max-width: 28rem;
      max-height: 90vh;
      overflow-y: auto;
      border-radius: 0.75rem;
      box-shadow: 0 25px 50px -12px rgba(30, 41, 59, 0.35), 0 10px 15px -3px rgba(15, 23, 42, 0.25);
    }

    .modal.show {
      display: block;
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }

    .modal-backdrop.show {
      display: block;
      opacity: 1;
    }

    .tab-button {
      transition: all 0.2s ease;
    }

    .tab-button.active {
      background-color: #3b82f6;
      color: white;
    }
  </style>
</head>
<body>
  
  <!-- Main Content -->
  <div class="p-6">
    <div class="mb-6 flex items-center justify-between">
      <h4 class="text-2xl font-semibold text-gray-800 flex items-center gap-2">
        <i class="bi bi-cloud-upload text-blue-600"></i> Historical COC/CTO Import
      </h4>
      <p class="text-sm text-gray-600 mt-1">Import historical COC data for new employees or migrate existing records</p>
      <button type="button" class="px-4 py-2 bg-gray-600 text-white font-medium rounded-md shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors" onclick="backToDashboard()">
        <i class="bi bi-arrow-left-circle"></i> Back to Dashboard
      </button>
    </div>

    <!-- Tab Navigation -->
    <div class="mb-6 flex gap-2">
      <button class="tab-button active px-6 py-3 font-medium rounded-lg" data-tab="manual">
        <i class="bi bi-pencil-square"></i> Manual Entry
      </button>
      <button class="tab-button px-6 py-3 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300" data-tab="csv">
        <i class="bi bi-file-earmark-spreadsheet"></i> CSV Upload
      </button>
    </div>

    <!-- Manual Entry Tab -->
    <div id="manualTab" class="tab-content">
      <div class="bg-white rounded-xl shadow-md p-6 mb-6">
        <div class="text-lg font-semibold text-gray-800 mb-4 pb-3 border-b border-gray-200">
          <i class="bi bi-plus-circle text-blue-600"></i> Add Historical COC Entry
        </div>
        
        <form id="manualEntryForm">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <!-- Employee -->
            <div class="md:col-span-2">
              <label for="employeeSelect" class="block text-sm font-medium text-gray-700 mb-1">
                Employee <span class="text-red-500">*</span>
              </label>
              <select id="employeeSelect" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">Select an employee...</option>
              </select>
            </div>

            <!-- Date Earned (Month/Year) -->
            <div>
              <label for="monthEarned" class="block text-sm font-medium text-gray-700 mb-1">
                Month Earned <span class="text-red-500">*</span>
              </label>
              <select id="monthEarned" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">Select month...</option>
                <option value="01">January</option>
                <option value="02">February</option>
                <option value="03">March</option>
                <option value="04">April</option>
                <option value="05">May</option>
                <option value="06">June</option>
                <option value="07">July</option>
                <option value="08">August</option>
                <option value="09">September</option>
                <option value="10">October</option>
                <option value="11">November</option>
                <option value="12">December</option>
              </select>
            </div>

            <div>
              <label for="yearEarned" class="block text-sm font-medium text-gray-700 mb-1">
                Year Earned <span class="text-red-500">*</span>
              </label>
              <select id="yearEarned" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">Select year...</option>
              </select>
            </div>

            <!-- Certificate Issue Date -->
            <div>
              <label for="certificateDate" class="block text-sm font-medium text-gray-700 mb-1">
                Certificate Issue Date <span class="text-red-500">*</span>
              </label>
              <input type="date" id="certificateDate" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div>

            <!-- Expiration Date -->
            <div>
              <label for="expirationDate" class="block text-sm font-medium text-gray-700 mb-1">
                Expiration Date
              </label>
              <input type="date" id="expirationDate" readonly class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              <p class="text-xs text-gray-500 mt-1">Auto-calculated as Certificate Date + 1 year - 1 day</p>
            </div>

            <!-- Hours Earned -->
            <div>
              <label for="hoursEarned" class="block text-sm font-medium text-gray-700 mb-1">
                Hours Earned <span class="text-red-500">*</span>
              </label>
              <input type="number" id="hoursEarned" step="0.01" min="0" required placeholder="0.00" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div>

            <!-- Hours Used -->
            <div>
              <label for="hoursUsed" class="block text-sm font-medium text-gray-700 mb-1">
                Hours Already Used
              </label>
              <input type="number" id="hoursUsed" step="0.01" min="0" value="0" placeholder="0.00" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div>

            <!-- Hours Remaining -->
            <div>
              <label for="hoursRemaining" class="block text-sm font-medium text-gray-700 mb-1">
                Hours Remaining
              </label>
              <input type="number" id="hoursRemaining" readonly placeholder="0.00" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50">
              <p class="text-xs text-gray-500 mt-1">Auto-calculated: Earned - Used</p>
            </div>

            <!-- Status -->
            <div>
              <label for="statusSelect" class="block text-sm font-medium text-gray-700 mb-1">
                Status <span class="text-red-500">*</span>
              </label>
              <select id="statusSelect" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="Active">Active (Unused)</option>
                <option value="Partially Used">Partially Used</option>
                <option value="Fully Used">Fully Used</option>
                <option value="Expired">Expired</option>
              </select>
            </div>

            <!-- Remarks -->
            <div class="md:col-span-2">
              <label for="remarks" class="block text-sm font-medium text-gray-700 mb-1">
                Remarks / Notes
              </label>
              <textarea id="remarks" rows="2" placeholder="E.g., Migrated from old system, Previous employment data" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
            </div>
          </div>

          <div class="mt-6 flex justify-end gap-3">
            <button type="button" id="clearFormBtn" class="px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-colors">
              <i class="bi bi-arrow-repeat"></i> Clear
            </button>
            <button type="submit" class="px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors">
              <i class="bi bi-check-circle"></i> Import Entry
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- CSV Upload Tab -->
    <div id="csvTab" class="tab-content hidden">
      <div class="bg-white rounded-xl shadow-md p-6">
        <div class="text-lg font-semibold text-gray-800 mb-4 pb-3 border-b border-gray-200">
          <i class="bi bi-file-earmark-spreadsheet text-blue-600"></i> Batch Import via CSV
        </div>

        <div class="mb-6">
          <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-4">
            <div class="flex">
              <i class="bi bi-info-circle text-blue-500 mt-0.5 mr-3"></i>
              <div class="text-sm text-blue-700">
                <p class="font-semibold mb-2">CSV File Requirements:</p>
                <ul class="list-disc list-inside space-y-1">
                  <li>CSV must have these columns (in order): <strong>Employee ID, Month-Year, Certificate Date, Hours Earned, Hours Used, Status, Remarks</strong></li>
                  <li>Month-Year format: MM-YYYY (e.g., 10-2024)</li>
                  <li>Certificate Date format: YYYY-MM-DD (e.g., 2024-10-31)</li>
                  <li>Status must be: Active, Partially Used, Fully Used, or Expired</li>
                  <li>First row should be headers</li>
                </ul>
              </div>
            </div>
          </div>

          <div class="mb-4">
            <button type="button" id="downloadTemplateBtn" class="inline-flex items-center gap-2 px-4 py-2 bg-green-600 text-white font-medium rounded-lg hover:bg-green-700 transition-colors">
              <i class="bi bi-download"></i> Download CSV Template
            </button>
          </div>

          <div class="mb-4">
            <label for="csvFileInput" class="block text-sm font-medium text-gray-700 mb-1">
              Upload CSV File
            </label>
            <input type="file" id="csvFileInput" accept=".csv" class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100">
          </div>

          <div id="csvPreview" class="hidden mb-4">
            <p class="text-sm font-medium text-gray-700 mb-2">Preview (first 5 rows):</p>
            <div class="overflow-x-auto border border-gray-200 rounded-lg">
              <table class="min-w-full text-sm" id="csvPreviewTable">
                <thead class="bg-gray-50"></thead>
                <tbody class="divide-y divide-gray-200"></tbody>
              </table>
            </div>
          </div>

          <div class="flex justify-end gap-3">
            <button type="button" id="cancelCsvBtn" class="px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-colors">
              <i class="bi bi-x-circle"></i> Cancel
            </button>
            <button type="button" id="uploadCsvBtn" disabled class="px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
              <i class="bi bi-upload"></i> Import CSV Data
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Import History -->
    <div class="bg-white rounded-xl shadow-md p-6 mt-6">
      <div class="text-lg font-semibold text-gray-800 mb-4 pb-3 border-b border-gray-200 flex items-center justify-between">
        <span><i class="bi bi-clock-history text-blue-600"></i> Recent Imports</span>
        <button type="button" id="refreshHistoryBtn" class="px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors">
          <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
      </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Employee</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Month-Year</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Certificate Date</th>
              <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Hours Earned</th>
              <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Hours Used</th>
              <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Remaining</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Imported Date</th>
            </tr>
          </thead>
          <tbody id="historyTableBody" class="divide-y divide-gray-200">
            <!-- Rows will be inserted here -->
          </tbody>
        </table>
      </div>
      
      <div id="noHistoryMsg" class="text-center py-8 text-gray-500">
        <i class="bi bi-inbox text-4xl mb-2"></i>
        <p>No import history yet.</p>
      </div>
    </div>
  </div>

  <!-- Response Modal -->
  <div id="responseModal" class="modal-backdrop">
    <div class="modal">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-md mx-4">
        <div id="responseModalHeader" class="px-6 py-4 rounded-t-lg flex items-center justify-between">
          <h3 id="responseModalTitle" class="text-lg font-semibold">Message</h3>
          <button id="closeResponseModalBtn" class="hover:opacity-75 transition-opacity">
            <i class="bi bi-x-lg text-xl"></i>
          </button>
        </div>
        <div class="p-6">
          <div id="responseModalBody"></div>
        </div>
        <div class="px-6 pb-6 flex justify-end">
          <button id="responseModalOkBtn" class="px-4 py-2 rounded-lg transition-colors">OK</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/js/select2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"></script>
  <script>
    let csvData = null;

    // Tab switching
    $('.tab-button').on('click', function() {
      const tab = $(this).data('tab');
      $('.tab-button').removeClass('active bg-blue-600 text-white').addClass('bg-gray-200 text-gray-700');
      $(this).removeClass('bg-gray-200 text-gray-700').addClass('active bg-blue-600 text-white');
      $('.tab-content').addClass('hidden');
      $('#' + tab + 'Tab').removeClass('hidden');
    });

    // Initialize Select2
    function initializeSelect2() {
      $('#employeeSelect').select2({
        placeholder: 'Select an employee...',
        width: '100%'
      });
    }

    // Load employees
    function loadEmployees() {
      google.script.run.withSuccessHandler(function(employees) {
        const select = $('#employeeSelect');
        select.empty().append('<option value="">Select an employee...</option>');
        employees.forEach(emp => {
          select.append(`<option value="${emp.id}">${emp.fullName} (${emp.id})</option>`);
        });
        initializeSelect2();
      }).withFailureHandler(function(err) {
        showResponseModal('Error', 'Failed to load employees: ' + (err.message || err), 'danger');
      }).apiListEmployeesForDropdown();
    }

    // Populate year dropdown
    function populateYears() {
      const yearSelect = $('#yearEarned');
      const currentYear = new Date().getFullYear();
      for (let year = currentYear; year >= currentYear - 10; year--) {
        yearSelect.append(`<option value="${year}">${year}</option>`);
      }
    }

    // Auto-calculate expiration date
    $('#certificateDate').on('change', function() {
      const certDate = new Date($(this).val());
      if (!isNaN(certDate.getTime())) {
        // Add 1 year and subtract 1 day
        const expDate = new Date(certDate);
        expDate.setFullYear(expDate.getFullYear() + 1);
        expDate.setDate(expDate.getDate() - 1);
        $('#expirationDate').val(expDate.toISOString().split('T')[0]);
      }
    });

    // Auto-calculate remaining hours
    function updateRemainingHours() {
      const earned = parseFloat($('#hoursEarned').val()) || 0;
      const used = parseFloat($('#hoursUsed').val()) || 0;
      const remaining = earned - used;
      $('#hoursRemaining').val(remaining.toFixed(2));
    }

    $('#hoursEarned, #hoursUsed').on('input', updateRemainingHours);

    // Show response modal
    function showResponseModal(title, message, type) {
      $('#responseModalTitle').text(title);
      $('#responseModalBody').html(message.replace(/\n/g, '<br>'));

      const colors = {
        'success': { header: 'bg-green-600 text-white', button: 'bg-green-600 hover:bg-green-700 text-white' },
        'danger': { header: 'bg-red-600 text-white', button: 'bg-red-600 hover:bg-red-700 text-white' },
        'warning': { header: 'bg-yellow-500 text-white', button: 'bg-yellow-500 hover:bg-yellow-600 text-white' },
        'info': { header: 'bg-blue-600 text-white', button: 'bg-blue-600 hover:bg-blue-700 text-white' }
      };

      const colorScheme = colors[type] || colors['info'];
      $('#responseModalHeader').removeClass('bg-green-600 bg-red-600 bg-yellow-500 bg-blue-600 text-white')
                               .addClass(colorScheme.header);
      $('#responseModalOkBtn').removeClass('bg-green-600 hover:bg-green-700 bg-red-600 hover:bg-red-700 bg-yellow-500 hover:bg-yellow-600 bg-blue-600 hover:bg-blue-700 text-white')
                              .addClass(colorScheme.button);

      $('#responseModal').addClass('show');
    }

    function closeResponseModal() {
      $('#responseModal').removeClass('show');
    }

    // Clear form
    function clearForm() {
      $('#manualEntryForm')[0].reset();
      $('#employeeSelect').val('').trigger('change');
      $('#hoursRemaining').val('');
    }

    // Submit manual entry
    $('#manualEntryForm').on('submit', function(e) {
      e.preventDefault();

      const data = {
        employeeId: $('#employeeSelect').val(),
        monthYear: $('#monthEarned').val() + '-' + $('#yearEarned').val(),
        certificateDate: $('#certificateDate').val(),
        expirationDate: $('#expirationDate').val(),
        hoursEarned: parseFloat($('#hoursEarned').val()),
        hoursUsed: parseFloat($('#hoursUsed').val()) || 0,
        status: $('#statusSelect').val(),
        remarks: $('#remarks').val().trim()
      };

      // Validation
      if (data.hoursUsed > data.hoursEarned) {
        showResponseModal('Validation Error', 'Hours Used cannot exceed Hours Earned.', 'warning');
        return;
      }

      google.script.run
        .withSuccessHandler(function(result) {
          showResponseModal('Success', 'Historical COC entry imported successfully.', 'success');
          clearForm();
          loadImportHistory();
        })
        .withFailureHandler(function(err) {
          showResponseModal('Error', err.message || err, 'danger');
        })
        .apiImportHistoricalCOC(data);
    });

    // CSV file handling
    $('#csvFileInput').on('change', function(e) {
      const file = e.target.files[0];
      if (!file) return;

      Papa.parse(file, {
        complete: function(results) {
          csvData = results.data;
          displayCsvPreview(results.data);
          $('#uploadCsvBtn').prop('disabled', false);
        },
        error: function(err) {
          showResponseModal('Error', 'Failed to parse CSV: ' + err.message, 'danger');
        }
      });
    });

    function displayCsvPreview(data) {
      if (!data || data.length < 2) {
        showResponseModal('Error', 'CSV file is empty or invalid.', 'danger');
        return;
      }

      const table = $('#csvPreviewTable');
      const thead = table.find('thead');
      const tbody = table.find('tbody');
      
      thead.empty();
      tbody.empty();

      // Headers
      const headerRow = $('<tr class="text-left"></tr>');
      data[0].forEach(header => {
        headerRow.append(`<th class="px-4 py-2 text-xs font-medium text-gray-500 uppercase">${header}</th>`);
      });
      thead.append(headerRow);

      // Preview rows (max 5)
      for (let i = 1; i < Math.min(6, data.length); i++) {
        const row = $('<tr></tr>');
        data[i].forEach(cell => {
          row.append(`<td class="px-4 py-2 text-sm text-gray-900">${cell}</td>`);
        });
        tbody.append(row);
      }

      $('#csvPreview').removeClass('hidden');
    }

    // Upload CSV
    $('#uploadCsvBtn').on('click', function() {
      if (!csvData || csvData.length < 2) {
        showResponseModal('Error', 'No valid CSV data to upload.', 'danger');
        return;
      }

      $(this).prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Importing...');

      google.script.run
        .withSuccessHandler(function(result) {
          showResponseModal('Success', `Successfully imported ${result.successCount} entries. ${result.errorCount} errors.`, 'success');
          $('#uploadCsvBtn').prop('disabled', false).html('<i class="bi bi-upload"></i> Import CSV Data');
          $('#csvFileInput').val('');
          $('#csvPreview').addClass('hidden');
          csvData = null;
          loadImportHistory();
        })
        .withFailureHandler(function(err) {
          showResponseModal('Error', err.message || err, 'danger');
          $('#uploadCsvBtn').prop('disabled', false).html('<i class="bi bi-upload"></i> Import CSV Data');
        })
        .apiImportHistoricalCOCBatch(csvData);
    });

    // Download CSV template
    $('#downloadTemplateBtn').on('click', function() {
      const template = 'Employee ID,Month-Year,Certificate Date,Hours Earned,Hours Used,Status,Remarks\n' +
                       'EMP001,10-2024,2024-10-31,16.00,0.00,Active,Migrated from old system\n' +
                       'EMP002,09-2024,2024-09-30,8.50,4.00,Partially Used,Previous employment';
      
      const blob = new Blob([template], { type: 'text/csv' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'historical_coc_template.csv';
      a.click();
      URL.revokeObjectURL(url);
    });

    // Load import history
    function loadImportHistory() {
      google.script.run
        .withSuccessHandler(function(history) {
          const tbody = $('#historyTableBody');
          tbody.empty();
          
          if (!history || history.length === 0) {
            $('#noHistoryMsg').show();
            return;
          }
          
          $('#noHistoryMsg').hide();
          
          history.forEach(item => {
            const row = $(`
              <tr class="hover:bg-gray-50">
                <td class="px-4 py-3 text-sm text-gray-900">${item.employeeName}</td>
                <td class="px-4 py-3 text-sm text-gray-900">${item.monthYear}</td>
                <td class="px-4 py-3 text-sm text-gray-900">${item.certificateDate}</td>
                <td class="px-4 py-3 text-sm text-gray-900 text-right">${item.hoursEarned}</td>
                <td class="px-4 py-3 text-sm text-gray-900 text-right">${item.hoursUsed}</td>
                <td class="px-4 py-3 text-sm text-gray-900 text-right">${item.hoursRemaining}</td>
                <td class="px-4 py-3 text-sm"><span class="px-2 py-1 text-xs rounded-full ${getStatusClass(item.status)}">${item.status}</span></td>
                <td class="px-4 py-3 text-sm text-gray-500">${item.importedDate}</td>
              </tr>
            `);
            tbody.append(row);
          });
        })
        .withFailureHandler(function(err) {
          showResponseModal('Error', 'Failed to load import history: ' + (err.message || err), 'danger');
        })
        .apiGetHistoricalImports();
    }

    function getStatusClass(status) {
      const classes = {
        'Active': 'bg-green-100 text-green-800',
        'Partially Used': 'bg-yellow-100 text-yellow-800',
        'Fully Used': 'bg-gray-100 text-gray-800',
        'Expired': 'bg-red-100 text-red-800'
      };
      return classes[status] || 'bg-gray-100 text-gray-800';
    }

    // Event handlers
    $(document).ready(function() {
      loadEmployees();
      populateYears();
      loadImportHistory();

      $('#clearFormBtn').on('click', clearForm);
      $('#cancelCsvBtn').on('click', function() {
        $('#csvFileInput').val('');
        $('#csvPreview').addClass('hidden');
        csvData = null;
        $('#uploadCsvBtn').prop('disabled', true);
      });
      $('#refreshHistoryBtn').on('click', loadImportHistory);
      $('#closeResponseModalBtn, #responseModalOkBtn').on('click', closeResponseModal);

      // Close modal when clicking outside
      $('#responseModal').on('click', function(e) {
        if (e.target === this) {
          closeResponseModal();
        }
      });
    });
  </script>


  <script>
    // Back to Dashboard function
    function backToDashboard() {
      if (typeof google !== 'undefined' && google.script && google.script.run) {
        google.script.run.navigateToPage('Dashboard');
      } else {
        window.location.href = 'dashboard_no_sidebar.html';
      }
    }
  </script>

</body>
</html>
